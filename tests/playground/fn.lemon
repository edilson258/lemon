fn math(lt: u8, rt: u8): u8 = {
  let x: u8 = lt + rt;

  let y: u8 = x * x;

  let z: u8= y / y;
  x
}

fn add(lhs: u8, rhs: u8): u8 = {
  let x: u8 = lhs + rhs;
  x
}

fn sub(lhs: u8, rhs: u8): u8 = {
  let x: u8 = lhs - rhs;
  x
}

fn div(lhs: u8, rhs: u8): u8 = {
  let x: u8 = lhs / rhs;
  x
}

fn mul(lhs: u8, rhs: u8): u8 = {
  let x: u8 = lhs * rhs;
  x
}

fn mod(lhs: u8, rhs: u8): u8 = {
  let x: u8 = lhs % rhs;
  x
}

fn cmp_gt(lhs: u8, rhs: u8): u8 = {
  let x: u8 = lhs > rhs;
  x
}

fn cmp_eq(lhs: u8, rhs: u8): u8 = {
  let x: u8 = lhs == rhs;
  x
}

fn cmp_lt(lhs: u8, rhs: u8): u8 = {
  let x: u8 = lhs < rhs;
  x
}

/*
fn cmp_le(lhs: u8, rhs: u8): u8 = {
  let x: u8 = lhs <= rhs;
  x
}
*/



fn main(): u16 = {
  let x: u16 = 1000;
  x
}
