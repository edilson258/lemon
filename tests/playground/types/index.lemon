type Nullable<T> = {
  value: T | null;

  fn is_null(self) = self::value == null;

  fn unwrap(self) = match self::value {
    null => panic("Tried to unwrap a null value"),
    val => val,
  };

  fn or_else(self, func) = match self::value {
    null => func(),
    val => val,
  };
}
